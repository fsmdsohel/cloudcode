openapi: 3.0.0
info:
  title: CloudCode API
  version: 1.0.0
  description: API documentation for CloudCode authentication and workspace management

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string

    Error:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        code:
          type: string
        message:
          type: string
        suggestion:
          type: string

paths:
  /api/v1/auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
                - acceptTerms
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                firstName:
                  type: string
                lastName:
                  type: string
                acceptTerms:
                  type: boolean
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        409:
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticate user and get session cookies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/components/schemas/User"
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Access and refresh tokens set as HTTP-only cookies
        401:
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Invalidate session and clear cookies
      security:
        - cookieAuth: []
      responses:
        200:
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get new access token using refresh token
      security:
        - cookieAuth: []
      responses:
        200:
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                description: New access token set as HTTP-only cookie
        401:
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/auth/validate:
    get:
      tags:
        - Authentication
      summary: Validate session
      description: Check if current session is valid
      security:
        - cookieAuth: []
      responses:
        200:
          description: Session is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        401:
          description: Invalid session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
